class Course implements Cloneable {

	String s1;
	String s2;
	String s3;

	public Course(String s1, String s2, String s3) {
		this.s1 = s1;
		this.s2 = s2;
		this.s3 = s3;
	}

	@Override
	protected Object clone() throws CloneNotSupportedException {
		return super.clone();
	}
}

class Student implements Cloneable {
	int id;
	String name;
	Course course;

	public Student(int id, String name, Course course) {
		this.id = id;
		this.name = name;
		this.course = course;
	}

	@Override
	protected Object clone() throws CloneNotSupportedException {
		Student student1 = (Student) super.clone();
		student1.course = (Course) course.clone();
		return student1;
	}
}

public class DeepCopy {

	public static void main(String[] args) {
		Course science = new Course("Physics", "Chemistry", "Biology");

		Student student1 = new Student(111, "John", science);

		Student student2 = null;

		try {

			student2 = (Student) student1.clone();
		} catch (CloneNotSupportedException e) {
			e.printStackTrace();
		}

		System.out.println(student1.course.s3);

		student2.course.s3 = "Maths";

		System.out.println(student1.course.s3);
	}
}
